% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bgDemographicSubgroups2015to2019.R
\docType{data}
\name{bgDemographicSubgroups2015to2019}
\alias{bgDemographicSubgroups2015to2019}
\title{Demographic subgroups of race/ethnicity by block group}
\description{
This 2015-2019 data will fit with the bg21 data
  which will be the (late) 2021 version of EJSCREEN.
  Percent Hispanic, percent Non-Hispanic Black Alone (not multirace), etc.
  Additional detail in demographic subgroups beyond demographic info
  that is in EJSCREEN dataset. Block group resolution for USA.
  From Census ACS 5 year summary file. 
  Can be merged with EJSCREEN data for analysis of the subgroups.
  Race ethnicity groups are defined by Census Bureau. They are 
  mutually exclusive (no overlaps between groups, 
  so a person is always in only one of these groups)
  so they add up to the total population count or percent.
}
\details{
This data was created by downloading and calculating
  DETAILED RACE ETHNICITY SUBGROUP VARIABLES THAT ARE NOT IN EJSCREEN
  INCLUDING % Hispanic, etc. (the subgroups within "minority")
  for use in EJ analysis.
  This can be MERGED WITH the EJSCREEN DATASET (see below).
  
  This may also be addressed in documentation help page for bg19 or bg20 via ?bg20
  
  *** Note the 2021 version of EJSCREEN to be released late 2021
  actually would use ACS2019 and fits with bgDemographicSubgroups2015to2019, which is from 2015-2019 (released late 2020).
  Note the 2020 version of EJSCREEN released late 2020 (actually Jan 2021)
  actually uses ACS2018 and fits with bgDemographicSubgroups2014to2018, which is from 2014-2018 (released late 2019).
  Note the 2019 version of EJSCREEN (released late 2019)
   actually uses ACS2017, which is from 2013-2017 (released late 2018).
  Note the 2018 version of EJSCREEN (released late 2018)
   actually uses ACS2016, which is from 2012-2016 (released late 2017).
   
  # COMPARISON OF 2014-2018 vs 2015-2019 US overall:
  
  > with(bgDemographicSubgroups2014to2018, sum(pop))
  [1] 322903030
  > with(bgDemographicSubgroups2015to2019, sum(pop))
  [1] 324697795
  > with(bgDemographicSubgroups2014to2018, sum(hisp)/sum(pop))
  [1] 0.1781276
  > with(bgDemographicSubgroups2015to2019, sum(hisp)/sum(pop))
  [1] 0.180104
  > with(bgDemographicSubgroups2014to2018, sum(nhba)/sum(pop))
  [1] 0.1229964
  > with(bgDemographicSubgroups2015to2019, sum(nhba)/sum(pop))
  [1] 0.1231223
  
  How it was created:
  \code{
    ######################################################################################
    # DOWNLOAD ACS TABLE WITH RACE ETHNICITY BY BLOCK GROUP
    # AND CREATE PERCENT VARIABLES LIKE PERCENT HISPANIC, ETC.
    
    # These are created: (count and percent hispanic or latino, nonhispanic white alone i.e. single race,
  # nonhispanic black or african american alone, Not Hispanic or Latino American Indian and Alaska Native alone,
  # Not Hispanic or Latino Native Hawaiian and Other Pacific Islander alone,
  # and nh some other race alone, and nh two or more races)
  # [1] "hisp"            "nhwa"            "nhba"            "nhaiana"         "nhaa"            "nhnhpia"
  # [7] "nhotheralone"    "nhmulti"         "nonmins"         "pcthisp"         "pctnhwa"         "pctnhba"
  # [13] "pctnhaiana"      "pctnhaa"         "pctnhnhpia"      "pctnhotheralone" "pctnhmulti"
    
  setwd('~/../Downloads/acs')
    
  library(ejscreen); library(ejanalysis); library(analyze.stuff); require(ACSdownload)
  acsdata <- ejscreen.acsget(tables = 'B03002', 
    end.year = 2019, 
    base.path = '~/../Downloads/acs', sumlevel = 'both' ) 
    # 10 minutes?? slow - downloads each state
  bgACS   <- ejscreen.acs.rename(acsdata$bg)
  names(bgACS) <- gsub('pop3002', 'pop', names(bgACS))
  bgACS   <- ejscreen.acs.calc(bgACS)
  rm(acsdata)
  # head(bgACS); hist(bgACS$pcthisp,100)  # write.csv(bgACS, file = 'demographics.csv', row.names = FALSE)
  # to SEE WHAT THOSE FIELDS ARE DEFINED AS
  # ejscreenformulas[ ejscreenformulas$Rfieldname %in% names(bgACS), c('Rfieldname', 'acsfieldname', 'acsfieldnamelong', 'formula')]
  
  bgDemographicSubgroups2015to2019 <- bgACS 
  save(bgDemographicSubgroups2015to2019, file = 'bgDemographicSubgroups2015to2019.rdata')
    
  # rm(bgACS) # used below in script example to merge with bg21 etc.
    ######################################################################################
  
    ###########################################
    # HOW TO MERGE the
    # DOWNLOADED ACS SUBGROUPS OF RACE ETHNICITY blockgroups
    # with the
    # EJSCREEN dataset blockgroups (from ftp site or from ejscreen package data)
    
    # Note that only Puerto Rico is missing from bgACS?
    # while bg21 should have PR
    # setdiff(substr(bg21$FIPS, 1,2), substr(bgACS$FIPS,1,2))
    # [1] "72" which is the FIPS code for Puerto Rico.
    
    bg <- 0 # just to stop RStudio from warnings about bg not existing.
    # # Use one of these, for example:
    # bg <- bg21 #; yr <- 2021
  
    ###########################################
    # merge bgACS info into bg
    ###########################################
    
    bg2 <- merge(bgACS, bg, by = 'FIPS', all.x = TRUE, all.y = TRUE, suffixes = c('_acs', '_bg'))
    
    # check which fields were in both
    # > grep('_acs', names(bg2), value = T)
    # [1] "pop_acs"    "pctmin_acs" "mins_acs"
    # > grep('_bg', names(bg2), value = T)
    # [1] "pop_bg"    "mins_bg"   "pctmin_bg"
    # confirm value was same in both for avail block groups
    # > table(bg2$mins_acs == bg2$mins_bg, useNA = 'always')
    # TRUE   <NA>
    # > table(bg2$pop_acs == bg2$pop_bg, useNA = 'always')
    # TRUE   <NA>
    # almost exactly the same percent minority values:
    # table(abs(bg2$pctmin_acs - bg2$pctmin_bg)/bg2$pctmin_acs < 0.00001, useNA = 'always')
    # TRUE   <NA>
    #
    # rename to original names, using the bg version and dropping duplicate from acs download
    
    names(bg2) <- gsub('pop_bg', 'pop', names(bg2)); bg2$pop_acs <- NULL
    names(bg2) <- gsub('mins_bg', 'mins', names(bg2)); bg2$mins_acs <- NULL
    names(bg2) <- gsub('pctmin_bg', 'pctmin', names(bg2)); bg2$pctmin_acs <- NULL
    
    #replace with expanded version of dataset, once sure merge was ok.
    bg <- bg2; rm(bg2, bgACS)
    ###########################################
  }
}
